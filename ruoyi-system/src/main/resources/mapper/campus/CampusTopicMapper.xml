<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.campus.mapper.CampusTopicMapper">
    
    <resultMap type="CampusTopic" id="CampusTopicResult">
        <result property="topicId"    column="topic_id"    />
        <result property="userId"    column="user_id"    />
        <result property="content"    column="content"    />
        <result property="imageUrls"    column="image_urls"    />
        <result property="status"    column="status"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectCampusTopicVo">
        select topic_id, user_id, content, image_urls, status, del_flag, create_by, create_time, update_by, update_time, remark from campus_topic
    </sql>

    <select id="selectCampusTopicList" parameterType="CampusTopic" resultMap="CampusTopicResult">
        <include refid="selectCampusTopicVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="content != null  and content != ''"> and content = #{content}</if>
            <if test="imageUrls != null  and imageUrls != ''"> and image_urls = #{imageUrls}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectCampusTopicByTopicId" parameterType="Long" resultMap="CampusTopicResult">
        <include refid="selectCampusTopicVo"/>
        where topic_id = #{topicId}
    </select>

    <insert id="insertCampusTopic" parameterType="CampusTopic" useGeneratedKeys="true" keyProperty="topicId">
        insert into campus_topic
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="content != null">content,</if>
            <if test="imageUrls != null">image_urls,</if>
            <if test="status != null">status,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="content != null">#{content},</if>
            <if test="imageUrls != null">#{imageUrls},</if>
            <if test="status != null">#{status},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateCampusTopic" parameterType="CampusTopic">
        update campus_topic
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="content != null">content = #{content},</if>
            <if test="imageUrls != null">image_urls = #{imageUrls},</if>
            <if test="status != null">status = #{status},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where topic_id = #{topicId}
    </update>

    <delete id="deleteCampusTopicByTopicId" parameterType="Long">
        delete from campus_topic where topic_id = #{topicId}
    </delete>

    <delete id="deleteCampusTopicByTopicIds" parameterType="String">
        delete from campus_topic where topic_id in 
        <foreach item="topicId" collection="array" open="(" separator="," close=")">
            #{topicId}
        </foreach>
    </delete>
</mapper>